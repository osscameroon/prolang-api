name: Frontend Continuous Integration
on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'

jobs:
  build:
    defaults:
      run:
        working-directory: ./frontend
    name: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Node 14
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      run: yarn install

    - name: Lint project
      run: yarn lint

    - name: Unit tests
      run: yarn test

    - name: E2E tests
      env:
        NEXT_PUBLIC_APP_ENV: test
        NEXT_PUBLIC_API_URL: http://localhost:5700
        NEXT_PUBLIC_API_DOC_URL: http://localhost:5700/spec/prolang.yaml
        NEXT_PUBLIC_GRAPHQL_URL: http://localhost:5700/graphql
        NEXT_PUBLIC_GA_ID: ga_id
        NEXT_PUBLIC_CLIENT_ORIGIN: brwsr
      run: yarn test:it:ci

  package:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - name: Copy configuration file for production
        uses: prewk/s3-cp-action@v2
        with:
          aws_region: ${{ secrets.AWS_REGION }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          source: ${{ secrets.BUCKET_FOLDER_PATH }}/frontend.env
          dest: .

      - name: Rename file
        run: mv frontend.env .env.production.local

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Dashboard to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ..
          file: Dockerfile.web
          push: true
          tags: tericcabrel/prolang-web:latest